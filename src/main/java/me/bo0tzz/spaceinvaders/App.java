/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package me.bo0tzz.spaceinvaders;

import com.google.mu.util.stream.BiStream;

import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;

public class App {

    private static final String[] KNOWN_PATTERNS = {"crab", "cuttlefish", "octopus", "squid"};

    public static void main(String[] args) throws IOException, ParseException {

        List<Pattern> known = new ArrayList<>();

        for (String knownPattern : KNOWN_PATTERNS) {
            String p = ResourceLoader.loadAsString("patterns/" + knownPattern);
            known.add(new Pattern(p));
        }

        String r = ResourceLoader.loadAsString("radar");
        RadarImage radarImage = new RadarImage(r);

        Map<Pattern, Map<Coordinate, Long>> detections = new HashMap<>();

        for (Pattern pattern : known) {
            Map<Coordinate, Long> coordinateLongMap = BiStream.biStream(radarImage.coordinateStream(),
                    Function.identity(),
                    coord -> radarImage.windowAt(coord, pattern.width(), pattern.height()))
                    .mapValues(pattern::match)
                    .toMap();

            detections.put(pattern, coordinateLongMap);
        }

        //Step through radar image. For every coord:
            //For every known pattern:
                //Get window size of pattern
                //Compare window to pattern
                //Store table (guava) of <coord, pattern, percentage>
        //Output the highest n scores

    }

}
